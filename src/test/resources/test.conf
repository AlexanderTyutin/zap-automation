# Copyright 2018 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Below properties are used to configure Zap Api.
# To override any of the the default values, specify the required config in the test suite's .conf file.

zap-automation-config {

  # Conducts a ZAP active scan if set to true.
  activeScan = false

  # Fails test only if the reported alert's severity is above or same as the provided failureThreshold.
  # Example:
  # failureThreshold = "Medium" will not fail the test if the report has only Low and Informational alerts.
  # Test will fail if there are any Medium or High Alerts
  # Accepted Values: High, Medium, Low
  failureThreshold = "Low"

  # Required field. It will rarely need to be changed. We've included it as an overridable
  # field for flexibility and just in case.
  zapBaseUrl = "http://zap.url.com"

  # Required field. It needs to be the URL of the start page of your application (not
  # just localhost:port).
  testUrl = "http://localhost:1234/abc/def"

  # Not a required field. This url is added as the base url to your context.
  # A context is a construct in Zap that limits the scope of any attacks run to a
  # particular domain (this doesn't mean that Zap won't find alerts on other services during the
  # browser test run).
  # This would usually be the base url of your service - eg http://localhost:xxxx.*
  contextBaseUrl = "http://context.base.url.*"

  # Not a required field. This value, if set to true, will ignore all alerts from optimizely.
  ignoreOptimizelyAlerts = false

  # Not a required field. This is the url that the zap-automation library
  # will use to filter out the alerts that are shown to you. Note that while Zap is doing
  # testing, it is likely to find alerts from other services that you don't own - for example
  # from logging in, therefore we recommend that you set this to be the base url for the
  # service you are interested in.
  alertsBaseUrl = "http://alerts.base.url"

  # Not a required field. You should set this to be true if you are testing an API.
  # By default this assumes you are testing a UI and therefore is defaulted to be false.
  testingAnApi = false

  # Not a required field. You may set this if you have any routes that are part of your
  # application, but you do not want tested. For example, if you had any test-only routes, you
  # could force Zap not to test them by adding them in here as a regex.
  routeToBeIgnoredFromContext = ""

  # Not a required field. We recommend you don't change this field, as we've made basic choices
  # for the platform. We made it overridable just in case your service differs from the
  # standards of the Platform.
  #
  # The technologies that you put here will limit the amount of checks that ZAP will do to
  # just the technologies that are relevant. The default technologies are set to
  # "OS,OS.Linux,Language,Language.Xml,SCM,SCM.Git".
  desiredTechnologyNames = "OS,OS.Linux,Language,Language.Xml,SCM,SCM.Git"

  # If, when you run the Zap tests, you find alerts that you have investigated and don't see as a problem
  # you can filter them out by adding to this list, using the cweid and the url that the alert was found on.
  # The CWE ID is a Common Weakness Enumeration (http://cwe.mitre.org/data/index.html), you can
  # find this by looking at the alert output from your tests.
  alertsToIgnore = []

  debug {
    # Checks if the testUrl configured above returns a 2xx or 3xx response
    healthCheck=true

    # When set to true the library deletes the run context and policy, and clears down all of the alerts generated during
    # execution of the scans
    tearDown = true

    # Set to true if you would like zap-automation to print it's config to the console
    printConfig=false
  }
}
